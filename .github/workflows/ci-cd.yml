name: CI/CD pipeline

on:
  push: # Push event for linting and building on every branch
    branches:
      - "**" # Run lint and build on any branch push
  pull_request: # Trigger audit only when PR is merged into release branch
    types:
      - closed
    branches:
      - release

jobs:
  # Linting job
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

  # Build job
  build:
    name: Build application
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

  # Audit job (only runs after PR is merged to 'release')
  audit:
    name: Audit dependencies
    if: github.event_name == 'push' && github.ref == 'refs/heads/release' && contains(github.event.head_commit.message, 'Merge pull request')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit

  # Docker build and push job (only runs after PR is merged to 'release')
  docker:
    name: Build and push Docker image
    if: github.event_name == 'push' && github.ref == 'refs/heads/release' && contains(github.event.head_commit.message, 'Merge pull request')
    runs-on: ubuntu-latest
    needs: audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/startup-nextjs-fabian:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/startup-nextjs-fabian:latest

  # Deployment job (only runs after PR is merged to 'release')
  deploy:
    name: Deploy Docker image to Azure Container Apps
    if: github.event_name == 'push' && github.ref == 'refs/heads/release' && contains(github.event.head_commit.message, 'Merge pull request')
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and publish
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: |
            CONTENTFUL_SPACE_ID=${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }}
            CONTENTFUL_ACCESS_TOKEN=${{ secrets.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN }}
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/startup-nextjs-fabian:latest
          file: ./Dockerfile
